name: NuGet Publish

on:
  workflow_dispatch:
  # all inputs default to push all - if package exists already, it'll be skipped anyway
    inputs:
      publishCore:
        description: 'Publish Wolfringo.Core (Y/N)?'
        required: true
        default: 'Y'
      publishCommands:
        description: 'Publish Wolfringo.Commands (Y/N)?'
        required: true
        default: 'Y'
      publishUtilities:
        description: 'Publish Wolfringo.Utilities (Y/N)?'
        required: true
        default: 'Y'
      publishUtilitiesInteractive:
        description: 'Publish Wolfringo.Utilities.Interactive (Y/N)?'
        required: true
        default: 'Y'
      publishHosting:
        description: 'Publish Wolfringo.Hosting (Y/N)?'
        required: true
        default: 'Y'
      publishMetapackage:
        description: 'Publish Wolfringo metapackage (Y/N)?'
        required: true
        default: 'Y'

jobs:
  nuget-publish:
    runs-on: ubuntu-latest

    steps:
      # Prepare environment
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          source-url: https://api.nuget.org/v3/index.json
          dotnet-version: 3.1.101
        env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_TOKEN}}
      - name: Exclude example projects
        run: dotnet sln remove Examples/**
      - name: Install dependencies
        run: dotnet restore
      - name: Setup latest NuGet version
        uses: NuGet/setup-nuget@v1.0.5
        with:
          nuget-version: 'latest'
      
      # Publish each package
      - name: Publish Wolfringo.Core
        if: github.event.inputs.publishCore == 'Y'
        run: |
          mkdir __out
          dotnet pack Wolfringo.Core -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish Wolfringo.Commands
        if: github.event.inputs.publishCommands == 'Y'
        run: |
          mkdir __out
          dotnet pack Wolfringo.Commands -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish Wolfringo.Utilities
        if: github.event.inputs.publishUtilities == 'Y'
        run: |
          mkdir __out
          dotnet pack Wolfringo.Utilities -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish Wolfringo.Utilities.Interactive
        if: github.event.inputs.publishUtilitiesInteractive == 'Y'
        run: |
          mkdir __out
          dotnet pack Wolfringo.Utilities.Interactive -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish Wolfringo.Hosting
        if: github.event.inputs.publishHosting == 'Y'
        run: |
          mkdir __out
          dotnet pack Wolfringo.Hosting -c Release -o __out --no-restore
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
      - name: Publish Wolfringo metapackage
        if: github.event.inputs.publishMetapackage == 'Y'
        run: |
          mkdir __out
          nuget pack "Wolfringo/Wolfringo.nuspec" -Exclude "*.*" -BasePath "Wolfringo" -NonInteractive -OutputDirectory __out
          dotnet nuget push "./__out/*.nupkg" --skip-duplicate --no-symbols true --api-key ${{secrets.NUGET_TOKEN}}
          rm -rf __out
